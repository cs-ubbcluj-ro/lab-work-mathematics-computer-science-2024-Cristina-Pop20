JavaScript
Language specification: 
1.Language Definition:
1.1 Alphabet:
1.1 a. Upper(A-Z) and lower case letters (a-z) of the English alphabet
       b. Underline character '_';
       c. Decimal digits (0-9);
2. Lexic:
    a. Operators : +, -, *,  /,  =, >=, <=, <, >, !=
    b. Separators :  ;, :, {}, [], space
    c. Reserved Words : var, const, let, int, bool, do, if, else, then,  while, for, read,  write,  START, END
    d. Identifiers : sequence of letters (a-z) and digits (0-9), where the first character must be a letter. The rule is:
                identifier ::= letter | letter  {letter | digit}
                letter ::= "a" | "b" | "c" | ... | "z"
                digit ::= "0" | "1" | ... | "9"
    e. Constants : non-negative integer , Boolean
                int_const ::= no_const{digit}
                bool_const ::= "true" | "false"
	
3. Sintax
    program ::= “START" decllist ";" cmpdstmt "END"
    decllist ::= declaration | declaration ";" decllist
    declaration ::= type "=" identifier ";" 
    type ::="int" |"bool"|"var"|"const"|"let"
    stmtlist ::= stmt | stmt ";" stmtlist
    stmt ::= assignment | iostmt | ifstmt | forstmt
    assignment ::= identifier "=" expression ";"
    iostmt ::= "read" | "write" "(" expression ")"
    ifstmt ::= "if" "(" condition ")" "then" ["{"] stmtlist ["}"] [“else” ["{"] stmtlist ["}"] ]
    condition ::= expression relation expression
    relation ::= "=" | "!=" | "<" | "<=" | ">" | ">=" | "==" | "==="  
    forstmt ::= "for" "(" condition ")" "{" stmtlist "}" 
    expression ::= expresion "+" term | term
    term ::= factor | term "*" factor | term "%" factor
    factor :: identifier | number_const | bool_const | "(" expression ")"

